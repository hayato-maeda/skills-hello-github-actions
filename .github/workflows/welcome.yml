name: cloc

on:
  workflow_dispatch:
  schedule:
    - cron: "* * * * *"

permissions:
  pull-requests: write

jobs:
  cloc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install cloc
        run: |
          sudo apt install cloc

      - name: Run cloc
        id: run-cloc
        run: |
          git fetch origin main
          cloc --ignore-whitespace --git --diff --by-file --exclude-dir=node_modules,dotnet,.github --not-match-f=^.+\.spec\.ts$ origin/main HEAD | tail -n +5 > cloc_output.txt

      - name: cloc results
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const txt = fs.readFileSync('cloc_output.txt', 'utf8');
            const output = `<details>\n<summary>Code Count!</summary>\n\n\`\`\`\n${txt}\n\`\`\`\n</details>`;
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const botComment = comments.data.find(comment => comment.user.login === 'github-actions[bot]');
            if (botComment) {
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            }

      - name: Cleanup
        run: rm cloc_output.txt
